name: Release

on:
  push:
    branches:
      - main

env:
  GODOT_VERSION: 4.1.1
  RELEASE_ITCH: true

jobs:
  release_game:
    runs-on: ubuntu-latest

    permissions: write-all

    strategy:
      fail-fast: true
      matrix:
        channel:
          - webgl
          - windows
          - linux
          - mac

    name: Release Game
    steps:
      - name: Checkout
        uses: actions/checkout@v3.3.0

      - name: Release Please
        uses: google-github-actions/release-please-action@v3
        id: release
        with:
          token: ${{ secrets.RELEASE_PLEASE }}
          release-type: simple
          extra-files: |
            project/version.gd

      - name: Export Game
        if: ${{ steps.release.outputs.release_created }}
        id: export
        uses: firebelley/godot-export@v5.2.1
        with:
          godot_executable_download_url: https://downloads.tuxfamily.org/godotengine/${{ env.GODOT_VERSION }}/Godot_v${{ env.GODOT_VERSION }}-stable_linux.x86_64.zip
          godot_export_templates_download_url: https://downloads.tuxfamily.org/godotengine/${{ env.GODOT_VERSION }}/Godot_v${{ env.GODOT_VERSION }}-stable_export_templates.tpz
          relative_project_path: ./project
          cache: true
          archive_output: true

      - name: Upload Release Artifact
        if: ${{ steps.release.outputs.release_created }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          for FILE_PATH in ${{ steps.export.outputs.archive_directory }}/*; do
            gh release upload ${{ steps.release.outputs.tag_name }} "$FILE_PATH" --clobber
          done

    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      archive_directory: ${{ steps.export.outputs.archive_directory }}
      game_version: ${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}.${{ steps.release.outputs.patch }}

  deploy_game:
    needs: release_game

    runs-on: ubuntu-latest

    strategy:
      matrix:
        channel: ["webgl", "windows", "linux", "mac"]

    name: Deploy Game
    steps:
      - name: Checkout
        uses: actions/checkout@v3.3.0

      - name: Deploy to Itch.io [${{ matrix.channel }}]
        if: ${{ needs.release_game.outputs.release_created }}
        uses: KikimoraGames/itch-publish@v0.0.3
        with:
          butlerApiKey: ${{ secrets.BUTLER_API_KEY }}
          gameData: ${{ needs.release_game.outputs.archive_directory }}
          itchUsername: ${{ vars.ITCH_USERNAME }}
          itchGameId: ${{ vars.ITCH_GAME_ID }}
          buildChannel: ${{ matrix.channel }}
          buildNumber: ${{ needs.release_game.outputs.game_version }}
